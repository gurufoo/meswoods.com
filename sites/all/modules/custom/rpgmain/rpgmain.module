<?php

function rpgmain_menu () {
  $items = array();

  $items['admin/rpg/create/%/%'] = array(
      'title' => 'Create nodes',
      'page callback' => 'rpgmain_rpg_createnodes',
      'page arguments' => array(3, 4),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
      );

  return $items;

}


function rpgmain_rpg_createnodes ($nodetype, $numnodes = 1) {
  dpm($nodetype);
  dpm($numnodes);

  $newnode = new stdClass();
  $newnode->type = $nodetype;
  $newnode->title = 'Choose a random name for me';
  $newnode->language = LANGUAGE_NONE;

  $newnode->field_distinguishing_features[$newnode->language][0]['value'] = 84;

  dpm($newnode, '$newnode before prepare');
  node_object_prepare($newnode);
  dpm($newnode, '$newnode after prepare');
  $node = node_submit($newnode);
  node_save($node);
  dpm($node, '$node after save');
  return 'bobo';
}

/**
 * The main form_alter that will alter node forms in common ways
 */
function rpgmain_form_node_form_alter (&$form, &$form_state) {
  // Get all of the form elements to be randomized from the module that controls this content type.
  // After getting the elements to be randomized, pre-select all options for that element
  // Name the function _get_random_[node_type_machine_name]_fields.
  drupal_add_js(drupal_get_path('theme', 'rpg') . '/js/node-form.js');
  $type = $form['type']['#value'];
  $module = $type . 'rules';
  //dpm($module, '$module');
  $all_fields = field_info_fields($type); // Get all fields on this node type (random or not)
  // get them element types
  if (module_exists($module)) {

    // Add a validate handler to randomly select from all the fields selected
    // Add it to the beginning of the list of validators so other validators can make use
    // of the preselected values
    array_unshift($form['#validate'], '_select_random_options_all');
    $randomized_fields = _getfields($type);
    // Set them default values (all values are selected by default)
    foreach ($randomized_fields as $key => $field) {
      // Add the UX select all / deselect all options
      $form[$field]['und']['#title'] .= ' <span class="deselectall">(Deselect all</span>';
      $form[$field]['und']['#title'] .= ' <span class="selectall">Select all)</span>';

      $options = list_allowed_values($all_fields[$field]);
      $defaults = array();
      foreach ($options as $key => $option) {
        $defaults[] = $key;
      }
      $form[$field]['und']['#default_value'] = $defaults;

    }
  }
}


/**
 * Roll percentile dice and determine the result
 *
 * @param int $chance The % chance that something is true
 *
 * @return boolean
 */
function _rollpercentile ($chance = 50) {
  $roll = rand(1, 100);
  if ($roll < $chance) {
    return TRUE;
  }else {
    return FALSE;
  }
}


/**
 * Set a single value in a form element. Helper function.
 *
 * @param string $field The machine name of the field to set
 * @param string $option The storage value (key) of the value being set
 * @param array $form The form array  form_set_value() requires this.
 * @param array $form_state The form state array. form_set_value() requires this.
 */
function _setopt ($field, $option, $form, &$form_state) {
  form_set_value($form[$field], array('und' => array(0 => array('value' => $option))), $form_state);
}


/**
 * Retrieves a list of options from a form element.  Typically this is used
 * to get all the options in order to select a random option.
 *
 * @param string $field The machine name for an element
 *
 * @return array An array of options for the element
 */
function _getopts ($field) {
  $all_fields = field_info_fields();
  $options = list_allowed_values($all_fields[$field]);
  return $options;
}

/**
 * Gets s list of all the fields from a content type that should be randomized.
 * 
 * @param string $type the machine name of a content type.
 */
function _getfields ($type) {
  $function = '_get_random_' . $type . '_fields';
  if (function_exists($function)) {
    $randomized_fields = $function();
    return $randomized_fields;
  }
}

/**
 * Select random values for all the multiselect fields
 */
function _select_random_options_all ($form, &$form_state) {
  $fields = _getfields($form_state['values']['type']);
  foreach ($fields as $field) { // $field = one of the form elements that should be chosen randomly
    // $random = all the selected items from the form element
    $random = array_rand($form_state['values'][$field]['und']);
    $value = $form_state['values'][$field]['und'][$random]['value'];
    _setopt($field, $value, $form, $form_state);
  }
}


function _avsan ($nextword) {
  $indefinate_article = "a"; // $next word sounds like it starts with a consonant
  $an_words = array('eladrin',
      'elf',
      );
  if (in_array($nextword, $an_words)) {
    $indefinate_article = "an";
  }

  return $indefinate_article;
}
